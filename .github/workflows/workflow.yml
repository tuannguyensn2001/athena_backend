name: Athena pipeline

on:
  push:
    branches:
      - main

jobs:
  rspec:
    runs-on: ubuntu-latest
    env:
      DATABASE_USR: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      RAILS_ENV: test
      RACK_ENV: test
      DISABLE_SPRING: 1
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: athena_backend_test
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
      - name: install bundler
        run: gem install bundler
      - name: cache
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: setup db
        run: bundle exec rails db:setup
      - name: run test
        run: bundle exec rspec
#  rubocop:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        name: Checkout
#      - name: setup ruby
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 3.2.2
#      - name: install bundler
#        run: gem install bundler
#      - name: cache
#        uses: actions/cache@v3
#        with:
#          path: vendor/bundle
#          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-gems-
#      - name: install dependencies
#        run: |
#          bundle config path vendor/bundle
#          bundle install --jobs 4 --retry 3
#      - name: run rubocop
#        run: bundle exec rubocop --auto-correct-all app

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: login docker hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: docker build
        uses: docker/setup-buildx-action@v2
        id: buildx
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          tags: ${{ secrets.DOCKER_USERNAME }}/athena
      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}


